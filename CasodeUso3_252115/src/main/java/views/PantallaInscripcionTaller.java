/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import controllers.ControlInscripcion;
import excepciones.InscripcionException;
import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import models.Alumno;
import models.Inscripcion;
import models.Taller;

/**
 *
 * @author sonic
 */
public class PantallaInscripcionTaller extends javax.swing.JFrame {

    private ControlInscripcion control;
    private Taller tallerAInscribir;
    private Alumno alumnoEncontrado;

    /**
     * Creates new form PantallaInscripcionTaller
     */
    public PantallaInscripcionTaller(ControlInscripcion control, Taller taller) {
        this.control = control;
        this.tallerAInscribir = taller;

        initComponents();
        configuracionInicial();
    }

    private void configuracionInicial() {
        this.setTitle("Inscribir en: " + tallerAInscribir.getNombreTaller());
        this.setLocationRelativeTo(null);

        // El área de texto no se puede editar manualmente
        txtArea.setEditable(false);
        // El botón de confirmar está deshabilitado al inicio
        btnConfirmar.setEnabled(false);

        // --- LÓGICA DE BÚSQUEDA DINÁMICA ---
        // Se añade un listener al campo de texto para reaccionar mientras el usuario escribe.
        textField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                buscarAlumno();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                buscarAlumno();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                buscarAlumno();
            }
        });
    }

    /**
     * Busca al alumno usando el ID del textfield y actualiza la UI. Este método
     * es llamado cada vez que el texto cambia.
     */
    private void buscarAlumno() {
        String idAlumno = textField.getText().trim();

        try {
            // Le pedimos al controlador que busque al alumno
            Alumno alumno = control.buscarAlumnoPorId(idAlumno);
            this.alumnoEncontrado = alumno; // Guardamos la referencia

            // Si lo encuentra, mostramos sus datos y habilitamos el botón
            txtArea.setForeground(Color.BLUE);
            txtArea.setText(formatearDatosAlumno(alumno));
            btnConfirmar.setEnabled(true);

        } catch (InscripcionException ex) {
            // Si no lo encuentra o el ID está vacío, reseteamos
            this.alumnoEncontrado = null;
            txtArea.setForeground(Color.RED);
            txtArea.setText(ex.getMessage());
            btnConfirmar.setEnabled(false);
        }
    }

    private String formatearDatosAlumno(Alumno alumno) {
        return "===== DATOS DEL ALUMNO ENCONTRADO =====\n\n"
                + "ID: \t" + alumno.getIdAlumno() + "\n"
                + "Nombre: \t" + alumno.getNombreCompleto() + "\n"
                + "Semestre: \t" + alumno.getSemestre() + "\n"
                + "Programa: \t" + alumno.getProgramaEducativo() + "\n\n"
                + "======================================\n"
                + "Presione 'Confirmar' para generar el ticket de su inscripcion.";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        btnCancelar = new javax.swing.JButton();
        btnConfirmar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Ingresa el ID del alumno a inscribir:");

        textField.setToolTipText("");

        jLabel2.setText("ID:");

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        btnCancelar.setBackground(new java.awt.Color(255, 102, 102));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar inscripcion");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConfirmar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
        if (alumnoEncontrado != null && tallerAInscribir != null) {
            try {
                Inscripcion inscripcion = control.registrarInscripcion(alumnoEncontrado, tallerAInscribir);

                String textoTicket = control.generarTicket(inscripcion);

                txtArea.setForeground(new Color(0, 102, 0));
                txtArea.setText(textoTicket);

                  btnConfirmar.setEnabled(false);
//                btnCancelar.setEnabled(false);
//                textField.setEnabled(false);

            } catch (InscripcionException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error de Inscripción", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textField;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
